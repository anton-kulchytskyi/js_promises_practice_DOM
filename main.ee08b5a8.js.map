{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","insertMessage","type","text","message","createElement","append","style","display","className","setAttribute","margin","border","borderRadius","padding","innerText","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","then","secondPromise","e","preventDefault","result","thirdPromise","leftClick","rightClick","button"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAE9BC,EAAgB,SAACC,EAAMC,GACrBC,IAAAA,EAAUL,SAASM,cAAc,OAEvCP,EAAKQ,OAAOF,GACZA,EAAQG,MAAMC,QAAd,QACAJ,EAAQK,UAAeP,GAAAA,OAAAA,GACvBE,EAAQM,aAAa,UAAW,gBAChCN,EAAQG,MAAMI,OAAd,MACAP,EAAQG,MAAMK,OAAd,iBACAR,EAAQG,MAAMM,aAAd,MACAT,EAAQG,MAAMO,QAAd,MACAV,EAAQW,UAAeZ,GAAAA,OAAAA,IAGnBa,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCrB,EAAKsB,iBAAiB,QAAS,WAC7BF,EAAQ,gCAKVG,WAAW,WAAMF,OAAAA,EAFJ,+BAEkB,OAGjCH,EACGM,KACC,SAAAJ,GAAWjB,OAAAA,EAAyBiB,UAAAA,IACpC,SAAAC,GAAUlB,OAAAA,EAAyBkB,UAAAA,KAGvC,IAAMI,EAAgB,IAAIN,QAAQ,SAACC,GACjCpB,EAAKsB,iBAAiB,QAAS,WAC7BF,EAAQ,iCAGVpB,EAAKsB,iBAAiB,cAAe,SAACI,GACpCA,EAAEC,iBAEFP,EAAQ,mCAIZK,EACGD,KAAK,SAAAI,GAAUzB,OAAAA,EAAyByB,UAAAA,KAE3C,IAAMC,EAAe,IAAIV,QAAQ,SAACC,GAC5BU,IAAAA,EACAC,EAEJ/B,EAAKsB,iBAAiB,YAAa,SAACI,GAC1BA,OAAAA,EAAEM,QACH,KAAA,EACHF,GAAY,EACZ,MAEG,KAAA,EACHC,GAAa,EAIbD,GAAaC,GACfX,EAAQ,kCAKdS,EACGL,KAAK,SAAAI,GAAUzB,OAAAA,EAAyByB,UAAAA","file":"main.ee08b5a8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nconst insertMessage = (type, text) => {\n  const message = document.createElement('div');\n\n  body.append(message);\n  message.style.display = `block`;\n  message.className = `${type}`;\n  message.setAttribute('data-qa', 'notification');\n  message.style.margin = `4px`;\n  message.style.border = `1px solid #000`;\n  message.style.borderRadius = `4px`;\n  message.style.padding = `4px`;\n  message.innerText = `${text}`;\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  const text = 'First promise was rejected';\n\n  setTimeout(() => reject(text), 3000);\n});\n\nfirstPromise\n  .then(\n    resolve => insertMessage(`success`, resolve),\n    reject => insertMessage(`warning`, reject)\n  );\n\nconst secondPromise = new Promise((resolve) => {\n  body.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  body.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n\n    resolve('Second promise was resolved');\n  });\n});\n\nsecondPromise\n  .then(result => insertMessage(`success`, result));\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftClick;\n  let rightClick;\n\n  body.addEventListener('mousedown', (e) => {\n    switch (e.button) {\n      case 0:\n        leftClick = true;\n        break;\n\n      case 2:\n        rightClick = true;\n        break;\n    }\n\n    if (leftClick && rightClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nthirdPromise\n  .then(result => insertMessage(`success`, result));\n\n// чому не працює такий код - хоча локально перевіряв і все ок??\n\n// function leftClick() {\n//   return new Promise(resolve => {\n//     body.addEventListener('click', () => {\n//       resolve(true);\n//     });\n//   });\n// }\n\n// function rightClick() {\n//   return new Promise(resolve => {\n//     body.addEventListener('contextmenu', (e) => {\n//       e.preventDefault();\n\n//       resolve(true);\n//     });\n//   });\n// }\n\n// async function thirdPromise() {\n//   await leftClick();\n//   await rightClick();\n\n//   insertMessage('Third promise was resolved');\n// }\n\n// thirdPromise();\n"]}